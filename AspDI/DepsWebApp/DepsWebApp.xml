<?xml version="1.0"?>
<doc>
    <assembly>
        <name>DepsWebApp</name>
    </assembly>
    <members>
        <member name="T:DepsWebApp.BasicAuthenticationHandler">
            <summary>
            Class Handler for Basic authentication, for use scheme of authentication
            </summary>
        </member>
        <member name="M:DepsWebApp.BasicAuthenticationHandler.#ctor(Microsoft.Extensions.Options.IOptionsMonitor{Microsoft.AspNetCore.Authentication.AuthenticationSchemeOptions},Microsoft.Extensions.Logging.ILoggerFactory,System.Text.Encodings.Web.UrlEncoder,Microsoft.AspNetCore.Authentication.ISystemClock,DepsWebApp.Services.IUserService)">
            <summary>
            Constructor for basic authentication
            </summary>
            <param name="options"></param>
            <param name="logger"></param>
            <param name="encoder"></param>
            <param name="clock"></param>
            <param name="userService"></param>
        </member>
        <member name="M:DepsWebApp.BasicAuthenticationHandler.HandleAuthenticateAsync">
            <summary>
            override method of  AuthenticationHandler class for check Authenticate
            </summary>
            <returns></returns>
        </member>
        <member name="T:DepsWebApp.Clients.IRatesProviderClient">
            <summary>
            Abstract currency rates provider interface.
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.IRatesProviderClient.GetRatesAsync">
            <summary>
            Requests rates from  currency rates provider.
            </summary>
            <returns>Returns currency rates.</returns>
        </member>
        <member name="T:DepsWebApp.Clients.NbuClient">
            <summary>
            NBU currency rates provider.
            For more details, please visit
            https://bank.gov.ua/ua/open-data/api-dev
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.NbuClient.#ctor(System.Net.Http.HttpClient,Microsoft.Extensions.Options.IOptions{DepsWebApp.Options.NbuClientOptions})">
            <summary>
            Constructor.
            </summary>
        </member>
        <member name="M:DepsWebApp.Clients.NbuClient.GetRatesAsync">
            <inheritdoc/>
        </member>
        <member name="T:DepsWebApp.Contracts.NbuRate">
            <summary>
            NBU provider native data model for currency rate.
            </summary>
        </member>
        <member name="P:DepsWebApp.Contracts.NbuRate.Rate">
            <summary>
            Currency rate related to base currency (UAH).
            </summary>
        </member>
        <member name="P:DepsWebApp.Contracts.NbuRate.Currency">
            <summary>
            Currency code.
            </summary>
        </member>
        <member name="T:DepsWebApp.Controllers.AuthController">
            <summary>
            Auth controller for registrations user 
            </summary>
        </member>
        <member name="M:DepsWebApp.Controllers.AuthController.#ctor(DepsWebApp.Services.IUserService,DepsWebApp.UserManagerContext)">
            <summary>
            Constructor for Auth Controller
            </summary>
            <param name="userService"></param>
            <param name="dbContext"></param>
        </member>
        <member name="M:DepsWebApp.Controllers.AuthController.Register(DepsWebApp.User)">
            <summary>
            Register method
            Allow anonymous for create user
            </summary>
            <param name="user"></param>
            <returns> Basic64 </returns>
        </member>
        <member name="T:DepsWebApp.Controllers.RatesController">
            <summary>
            Rates controller 
            </summary>
        </member>
        <member name="M:DepsWebApp.Controllers.RatesController.#ctor(DepsWebApp.Services.IRatesService,Microsoft.Extensions.Logging.ILogger{DepsWebApp.Controllers.RatesController})">
            <summary>
            Rates Controller
            </summary>
            <param name="rates"></param>
            <param name="logger"></param>
        </member>
        <member name="M:DepsWebApp.Controllers.RatesController.Get(System.String,System.String,System.Nullable{System.Decimal})">
            <summary>
            Get method
            </summary>
            <param name="srcCurrency"></param>
            <param name="dstCurrency"></param>
            <param name="amount"></param>
            <returns></returns>
        </member>
        <member name="T:DepsWebApp.Models.CurrencyRate">
            <summary>
            Currency rate model.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.CurrencyRate.Currency">
            <summary>
            Currency code (ISO).
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.CurrencyRate.Rate">
            <summary>
            Currency rate related to base currency.
            </summary>
        </member>
        <member name="T:DepsWebApp.Models.ExchangeResult">
            <summary>
            Exchange operation result.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.Rate">
            <summary>
            Exchange rate.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.SourceAmount">
            <summary>
            Amount in source currency.
            </summary>
        </member>
        <member name="P:DepsWebApp.Models.ExchangeResult.DestinationAmount">
            <summary>
            Amount in destination currency.
            </summary>
        </member>
        <member name="M:DepsWebApp.Models.ExchangeResult.#ctor(System.Decimal,System.Decimal,System.Decimal)">
            <summary>
            Constructor.
            </summary>
            <param name="rate">Set <see cref="P:DepsWebApp.Models.ExchangeResult.Rate"/> value.</param>
            <param name="srcAmount">Set <see cref="P:DepsWebApp.Models.ExchangeResult.SourceAmount"/> value.</param>
            <param name="destAmount">Set <see cref="P:DepsWebApp.Models.ExchangeResult.DestinationAmount"/> value.</param>
        </member>
        <member name="T:DepsWebApp.User">
            <summary>
            User Class
            </summary>
        </member>
        <member name="P:DepsWebApp.User.Login">
            <summary>
            User Login
            </summary>
        </member>
        <member name="P:DepsWebApp.User.Password">
            <summary>
            User Password
            </summary>
        </member>
        <member name="T:DepsWebApp.Options.CacheOptions">
            <summary>
            Caching options.
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.CacheOptions.RatesCacheLifeTime">
            <summary>
            Default rates cache lifetime.
            </summary>
        </member>
        <member name="T:DepsWebApp.Options.NbuClientOptions">
            <summary>
            Options of Nbu Client
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.NbuClientOptions.BaseAddress">
            <summary>
            Base address with URL
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.NbuClientOptions.IsValid">
            <summary>
            Valid check
            </summary>
        </member>
        <member name="T:DepsWebApp.Options.RatesOptions">
            <summary>
            Structure of options of rates
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.RatesOptions.BaseCurrency">
            <summary>
            Base currency
            </summary>
        </member>
        <member name="P:DepsWebApp.Options.RatesOptions.IsValid">
            <summary>
            Valid check
            </summary>
        </member>
        <member name="T:DepsWebApp.Services.CacheHostedService">
            <summary>
            Cache 
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.CacheHostedService.#ctor(Microsoft.Extensions.DependencyInjection.IServiceScopeFactory)">
            <summary>
            Constructor
            </summary>
            <param name="scopeFactory"></param>
        </member>
        <member name="M:DepsWebApp.Services.CacheHostedService.StartAsync(System.Threading.CancellationToken)">
            <summary>
            Start work in async 
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="M:DepsWebApp.Services.CacheHostedService.StopAsync(System.Threading.CancellationToken)">
            <summary>
            Stop work in async
            </summary>
            <param name="cancellationToken"></param>
            <returns></returns>
        </member>
        <member name="T:DepsWebApp.Services.IRatesService">
            <summary>
            Currency rates service.
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.IRatesService.ExchangeAsync(System.String,System.String,System.Decimal)">
            <summary>
            Exchanges given amount from source currency to destination currency.
            </summary>
            <param name="srcCurrency">Source currency</param>
            <param name="destCurrency">Destination currency</param>
            <param name="amount">Amount of funds.</param>
            <returns>Returns exchange result or <c>null</c> if source or destination currency wasn't found.</returns>
        </member>
        <member name="M:DepsWebApp.Services.IRatesService.ActualizeRatesAsync">
            <summary>
            Actualize rates.
            Kind of abstraction leak.
            </summary>
            <returns>Returns awaiter</returns>
        </member>
        <member name="T:DepsWebApp.Services.IUserService">
            <summary>
            User service interface
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.IUserService.Authenticate(System.String,System.String)">
            <summary>
            Authenticate Users in service
            </summary>
            <param name="login"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:DepsWebApp.Services.RatesService">
            <summary>
            Rates Service
            </summary>
        </member>
        <member name="M:DepsWebApp.Services.RatesService.#ctor(DepsWebApp.Clients.IRatesProviderClient,Microsoft.Extensions.Caching.Memory.IMemoryCache,Microsoft.Extensions.Options.IOptions{DepsWebApp.Options.RatesOptions},Microsoft.Extensions.Options.IOptions{DepsWebApp.Options.CacheOptions})">
            <summary>
            Constructor
            </summary>
            <param name="client"></param>
            <param name="cache"></param>
            <param name="ratesOptions"></param>
            <param name="cacheOptions"></param>
            <exception cref="T:System.ArgumentOutOfRangeException"></exception>
        </member>
        <member name="M:DepsWebApp.Services.RatesService.ExchangeAsync(System.String,System.String,System.Decimal)">
            <summary>
            Exchange in async
            </summary>
            <param name="srcCurrency"></param>
            <param name="destCurrency"></param>
            <param name="amount"></param>
            <returns></returns>
            <exception cref="T:System.InvalidOperationException"></exception>
        </member>
        <member name="M:DepsWebApp.Services.RatesService.ActualizeRatesAsync">
            <summary>
            Actualize
            </summary>
            <returns></returns>
        </member>
        <member name="T:DepsWebApp.UserService">
            <summary>
            User Service (Save users in memory)
            Check Authenticate
            </summary>
        </member>
        <member name="M:DepsWebApp.UserService.#ctor(DepsWebApp.UserManagerContext)">
            <summary>
            Constructor of UserService
            </summary>
        </member>
        <member name="M:DepsWebApp.UserService.Authenticate(System.String,System.String)">
            <summary>
            Authenticate user 
            </summary>
            <param name="login"></param>
            <param name="password"></param>
            <returns></returns>
        </member>
        <member name="T:DepsWebApp.Startup">
            <summary>
            Startup class
            </summary>
        </member>
        <member name="M:DepsWebApp.Startup.#ctor(Microsoft.Extensions.Configuration.IConfiguration)">
            <summary>
            Constructor of startup
            </summary>
            <param name="configuration"></param>
        </member>
        <member name="P:DepsWebApp.Startup.Configuration">
            <summary>
            
            </summary>
        </member>
        <member name="M:DepsWebApp.Startup.ConfigureServices(Microsoft.Extensions.DependencyInjection.IServiceCollection)">
            <summary>
            Configuration of services
            </summary>
            <param name="services"></param>
        </member>
        <member name="M:DepsWebApp.Startup.Configure(Microsoft.AspNetCore.Builder.IApplicationBuilder)">
            <summary>
            Configuration
            </summary>
            <param name="app"></param>
        </member>
    </members>
</doc>
